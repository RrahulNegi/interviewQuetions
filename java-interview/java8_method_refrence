Method refrence

Java 8 method references are the shortened versions of lambda expressions calling a specific method. 
For example, lambda expression (Student s) -> s.getName() which is calling a method getName() of Student class can be 
shortened as Student::getName using Java 8 method references. Let’s see them in detail.

1) Definition
Java 8 method references can be defined as shortened versions of lambda expressions calling a specific method.
 Method references are the easiest way to refer a method than the lambdas calling a specific method. 
 Method references will enhance the readability of your code.

2) Syntax
a) Method reference to static method :

ClassName::MethodName

Use this syntax when you are referring to a static method.

ex : Integer::parseInt, Math::max

b) Method reference to instance method of an existing object :

ReferenceVariable::MethodName

Use this syntax when you are referring to an instance method of already existing object.

ex : s::getName

where ‘s’ is a reference variable referring to Student object which already exist.

c) Method reference to instance method of non-existing object :

ClassName::MethodName

Use this syntax when you are referring to an instance method by passing reference variables as an argument.

ex : (Student s) -> s.getName() can be written as Student::getName

3) Constructor References
You can also refer to the constructor of a class same as method references. Syntax for referring to constructor is,

ClassName::new

Ex : Student::new

4) Examples
Java 8 method references

(String s)-> Integre.parseInt(s) ===> Integer::parseInt

(String s) ->s.toLowerCase() ===> String::toLowerCase
(int i)->Sysout(i) ====>System.out::println

(Student s) -> s.getName() ===> s::getName
()->s.getName() ====> s::getName where s is Student object
()-> new Student() ====> Student::new



a) Method reference to static method


import java.util.function.Function;
 
public class Java8MethodReferences
{
    public static void main(String[] args) 
    {
        //Calling parseInt() method using lambda
         
        Function<String, Integer> lambdaFunction = (String s) -> Integer.parseInt(s);
        System.out.println(lambdaFunction.apply("12"));
         
        //Calling parseInt() method using method reference
         
        Function<String, Integer> referenceFunction = Integer::parseInt;
        System.out.println(referenceFunction.apply("12"));
    }
}
b) Method reference to instance method (ClassName::MethodName)


import java.util.function.Function;
 
public class Java8MethodReferences
{
    public static void main(String[] args) 
    {
        //Calling toLowerCase() method using lambda
         
        Function<String, String> lambdaFunction = (String s) -> s.toLowerCase();
        System.out.println(lambdaFunction.apply("JAVA"));
         
        //Calling toLowerCase() method using method reference
         
        Function<String, String> referenceFunction = String::toLowerCase;
        System.out.println(referenceFunction.apply("JAVA"));
    }
}
c) Method reference to instance method (ReferenceVariable::MethodName)


import java.util.function.Supplier;
 
class Company
{
    String name;
     
    public Company(String name) 
    {
        this.name = name;
    }
     
    public String getName()
    {
        return name;
    }
}
 
public class Java8MethodReferences
{
    public static void main(String[] args) 
    {
        Company c = new Company("My_Company");
         
        //Calling getName() of c using lambda
         
        Supplier<String> lambdaSupplier = () -> c.getName();
        System.out.println(lambdaSupplier.get());
         
        //Calling getName() of c using method reference
         
        Supplier<String> referenceSupplier = c::getName;
        System.out.println(referenceSupplier.get());
    }
}
d) Constructor References

import java.util.function.Supplier;
 
class Company
{
     
}
 
public class Java8MethodReferences
{
    public static void main(String[] args) 
    {
        //Creating objects using lambda
         
        Supplier<Company> lambdaSupplier = () -> new Company();
        lambdaSupplier.get();
         
        //Creating objects using constructor references
         
        Supplier<Company> referenceSupplier = Company::new;
        referenceSupplier.get();
    }
}