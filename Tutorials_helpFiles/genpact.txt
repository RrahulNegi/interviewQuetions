Make a class immutable which is having Date as an attribute.
	- Make class Final
	- Make member var private, final
	- No setter methods.
	- private constructors.
	- static factory method to create new instance.
		//Factory method to store object creation logic in single place
		public static ImmutableClass createNewInstance(Integer fld1, String fld2, Date date)
		{
			return new ImmutableClass(fld1, fld2, date);
		}
	- special care for mutable members. Like in getter method of mutable attribute do not retuen the refrence instead return the new instance after setting the value/content. 
	e.g. 
			/**
		* Date class is mutable so we need a little care here.
		* We should not return the reference of original instance variable.
		* Instead a new Date object, with content copied to it, should be returned.
		* */
		public Date getMutableField() {
			return new Date(mutableField.getTime());
		}
	- special care should also be taken in constructor for mutable fields:
		//Default private constructor will ensure no unplanned construction of class
		private ImmutableClass(Integer fld1, String fld2, Date date)
		{
			this.immutableField1 = fld1;
			this.immutableField2 = fld2;
			this.mutableField = new Date(date.getTime());
		}
Questions on Encapsulation,Inheritence,Threading,Polymorphism,Internationlisation ,IO operations,Serialisation  
 Core java with threading and collections. 2 technical interview followed my managerial round
 1.

Implement equals and hashcode methods  for  demo class.

Class Demo {

   private String key;

   private int value;

}

2.

Interface Demo{

m1();

m2();

}

Class A implements Demo{

m1();

m2();

m3():

}

main(){

   Demo object = new A();

    object.m3();

}

3.

What happens when Immutable class contains mutable reference as instance variable. How to avoid the issues with it.

4.

Hashmap working , collision.

5.spring bean definitions

6. Caching in hibernate.

2nd round

Types of class loaders.

Rest and soap difference

Jre and JVM

JDK – Java Development Kit (in short JDK) is Kit which provides the environment to develop and execute(run) the Java program. JDK is a kit(or package) which includes two things
Development Tools(to provide an environment to develop your java programs)
JRE (to execute your java program).
Note : JDK is only used by Java Developers.

JRE – Java Runtime Environment (to say JRE) is an installation package which provides environment to only run(not develop) the java program(or application)onto your machine. JRE is only used by them who only wants to run the Java Programs i.e. end users of your system.
JVM – Java Virtual machine(JVM) is a very important part of both JDK and JRE because it is contained or inbuilt in both. Whatever Java program you run using JRE or JDK goes into JVM and JVM is responsible for executing the java program line by line hence it is also known as interpreter.


How will be the out of memory will be tackled after reaching max size available
Difference between logical and physical database

Which design patterns are been used in your project

What is build design pattern

For implementing caching in application, which kind of collection do you use

Difference between list and set

Implementation of custom set in java

What all required changes are done on class if it is being used as key in collection

What need to be considered inside implementation of equals and hascode

Contact equals and hashcode.

Explain executor framework.

Difference between interface and abstract class.

Q) Why we explicitly give public static final for constants if JVM internally treats this as same in interface.


public: for the accessibility across all the classes, just like the methods present in the interface

static: as interface cannot have an object, the interfaceName.variableName can be used to reference it or directly the variableName in the class implementing it.

final: to make them constants. If 2 classes implement the same interface and you give both of them the right to change the value, conflict will occur in the current value of the var, which is why only one time initialization is permitted.

Q)Java has no concept of object immutability; this is achieved by carefully designing the object, and is a far-from-trivial endeavor.

Q)How do you display duplicates with their count using collection.  